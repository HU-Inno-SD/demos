version: "3.9"
services:
  web1:
    build:
      context: "."
      dockerfile: "./development/app/Dockerfile"
    ports:
      - "127.0.0.1:8091:8080"
    environment:
      - spring_profiles_active=docker
    depends_on:
      - pg
  web2:
    build:
      context: "."
      dockerfile: "./development/app/Dockerfile"
    ports:
      - "127.0.0.1:8092:8080"
    environment:
      - spring_profiles_active=docker,init-data
    depends_on:
      - pg
      - web1
  lb:
    image: haproxy:latest
    ports:
      - "127.0.0.1:8090:80"
      - "127.0.0.1:9000:9000"
    volumes:
      - ./development/haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
  pg:
    image: postgres
    restart: always
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - ./development/db:/docker-entrypoint-initdb.d/
    environment:
      POSTGRES_PASSWORD: 1q2w3e!
  #debug: #soms kan het handig zijn om even met een iets minder minimale container -in- het compose-netwerk te zitten
    #image: debian
